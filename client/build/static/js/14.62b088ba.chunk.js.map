{"version":3,"sources":["pages/home/line.jsx","pages/home/bar.jsx","pages/home/home.js"],"names":["Line","dv","DataSet","createView","source","month","a","b","c","transform","type","fields","key","value","style","float","width","height","data","scale","range","forceFit","name","label","formatter","val","crosshairs","position","size","color","shape","stroke","lineWidth","React","Component","Bar","marginLeft","year","sales","tickInterval","RangePicker","Home","state","isVisited","handleChange","setState","this","className","title","extra","headStyle","suffix","fontWeight","valueStyle","fontSize","prefix","onClick","defaultValue","moment","format","bodyStyle","padding","Item"],"mappings":"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","file":"static/js/14.62b088ba.chunk.js","sourcesContent":["import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n  Legend,\r\n} from \"bizcharts\"\r\nimport DataSet from \"@antv/data-set\"\r\n\r\nexport default class Line extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        month: \"Jan\",\r\n        a: 7.0,\r\n        b: 3.9,\r\n        c: 5.9\r\n      },\r\n      {\r\n        month: \"Feb\",\r\n        a: 6.9,\r\n        b: 4.2,\r\n        c: 1.9\r\n      },\r\n      {\r\n        month: \"Mar\",\r\n        a: 9.5,\r\n        b: 5.7,\r\n        c: 3.9\r\n      },\r\n      {\r\n        month: \"Apr\",\r\n        a: 14.5,\r\n        b: 8.5,\r\n        c: 5.5\r\n      },\r\n      {\r\n        month: \"May\",\r\n        a: 18.4,\r\n        b: 11.9,\r\n        c: 8.9\r\n      },\r\n      {\r\n        month: \"Jun\",\r\n        a: 21.5,\r\n        b: 15.2,\r\n        c: 10.0\r\n      },\r\n      {\r\n        month: \"Jul\",\r\n        a: 25.2,\r\n        b: 17.0,\r\n        c: 12.9\r\n      },\r\n      {\r\n        month: \"Aug\",\r\n        a: 26.5,\r\n        b: 16.6,\r\n        c: 15.9\r\n      },\r\n      {\r\n        month: \"Sep\",\r\n        a: 23.3,\r\n        b: 14.2,\r\n        c: 20.7\r\n      },\r\n      {\r\n        month: \"Oct\",\r\n        a: 18.3,\r\n        b: 10.3,\r\n        c: 25.9\r\n      },\r\n      {\r\n        month: \"Nov\",\r\n        a: 13.9,\r\n        b: 6.6,\r\n        c: 30.9\r\n      },\r\n      {\r\n        month: \"Dec\",\r\n        a: 9.6,\r\n        b: 4.8,\r\n        c: 35.9\r\n      }\r\n    ]\r\n    const ds = new DataSet()\r\n    const dv = ds.createView().source(data)\r\n    dv.transform({\r\n      type: \"fold\",\r\n      fields: [\"a\", \"b\", \"c\"],\r\n      // 展开字段集\r\n      key: \"city\",\r\n      // key字段\r\n      value: \"temperature\" // value字段\r\n    })\r\n    const cols = {\r\n      month: {\r\n        range: [0, 1]\r\n      }\r\n    }\r\n    return (\r\n      <div style={{float: 'right', width: 750, height: 300}}>\r\n        <Chart height={250} data={dv} scale={cols} forceFit>\r\n          <Legend/>\r\n          <Axis name=\"month\"/>\r\n          <Axis\r\n            name=\"temperature\"\r\n            label={{\r\n              formatter: val => `${val}万个`\r\n            }}\r\n          />\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom\r\n            type=\"line\"\r\n            position=\"month*temperature\"\r\n            size={2}\r\n            color={\"city\"}\r\n            shape={\"smooth\"}\r\n          />\r\n          <Geom\r\n            type=\"point\"\r\n            position=\"month*temperature\"\r\n            size={4}\r\n            shape={\"circle\"}\r\n            color={\"city\"}\r\n            style={{\r\n              stroke: \"#fff\",\r\n              lineWidth: 1\r\n            }}\r\n          />\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport {\r\n  Chart,\r\n  Geom,\r\n  Axis,\r\n  Tooltip,\r\n} from \"bizcharts\"\r\n\r\nexport default class Bar extends React.Component {\r\n  render() {\r\n    const data = [\r\n      {\r\n        year: \"1月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"2月\",\r\n        sales: 52\r\n      },\r\n      {\r\n        year: \"3月\",\r\n        sales: 61\r\n      },\r\n      {\r\n        year: \"4月\",\r\n        sales: 145\r\n      },\r\n      {\r\n        year: \"5月\",\r\n        sales: 48\r\n      },\r\n      {\r\n        year: \"6月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"7月\",\r\n        sales: 28\r\n      },\r\n      {\r\n        year: \"8月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"59月\",\r\n        sales: 68\r\n      },\r\n      {\r\n        year: \"10月\",\r\n        sales: 38\r\n      },\r\n      {\r\n        year: \"11月\",\r\n        sales: 58\r\n      },\r\n      {\r\n        year: \"12月\",\r\n        sales: 38\r\n      }\r\n    ]\r\n    const cols = {\r\n      sales: {\r\n        tickInterval: 20\r\n      }\r\n    }\r\n    return (\r\n      <div style={{width: '100%', marginLeft: -30}}>\r\n        <Chart height={338} data={data} scale={cols} forceFit>\r\n          <Axis name=\"year\"/>\r\n          <Axis name=\"sales\"/>\r\n          <Tooltip\r\n            crosshairs={{\r\n              type: \"y\"\r\n            }}\r\n          />\r\n          <Geom type=\"interval\" position=\"year*sales\"/>\r\n        </Chart>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Icon,\r\n  Card,\r\n  Statistic,\r\n  DatePicker,\r\n  Timeline,\r\n} from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport Line from './line'\r\nimport Bar from './bar'\r\nimport './home.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n  state = {\r\n    isVisited: true\r\n  }\r\n\r\n  handleChange = (isVisited) => {\r\n    return () => this.setState({isVisited})\r\n  }\r\n  componentDidMount(){\r\n  }\r\n  render() {\r\n    const {isVisited} = this.state\r\n\r\n    return (\r\n      <div className='home'>\r\n        <Card\r\n          className=\"home-card\"\r\n          title=\"商品总量\"\r\n          extra={<Icon style={{color: 'rgba(0,0,0,.45)'}} type=\"question-circle\"/>}\r\n          style={{width: 250}}\r\n          headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n        >\r\n          <Statistic\r\n            value={1128163}\r\n            suffix=\"个\"\r\n            style={{fontWeight: 'bolder'}}\r\n          />\r\n          <Statistic\r\n            value={15}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'周同比'}\r\n            suffix={<div>%<Icon style={{color: 'red', marginLeft: 10}} type=\"arrow-down\"/></div>}\r\n          />\r\n          <Statistic\r\n            value={10}\r\n            valueStyle={{fontSize: 15}}\r\n            prefix={'日同比'}\r\n            suffix={<div>%<Icon style={{color: '#3f8600', marginLeft: 10}} type=\"arrow-up\"/></div>}\r\n          />\r\n        </Card>\r\n\r\n        <Line/>\r\n\r\n        <Card\r\n          className=\"home-content\"\r\n          title={<div className=\"home-menu\">\r\n            <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                  onClick={this.handleChange(true)}>访问量</span>\r\n            <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>销售量</span>\r\n          </div>}\r\n          extra={<RangePicker\r\n            defaultValue={[moment('2019/01/01', dateFormat), moment('2019/06/01', dateFormat)]}\r\n            format={dateFormat}\r\n          />}\r\n        >\r\n          <Card\r\n            className=\"home-table-left\"\r\n            title={isVisited ? '访问趋势' : '销售趋势'}\r\n            bodyStyle={{padding: 0, height: 275}}\r\n            extra={<Icon type=\"reload\"/>}\r\n          >\r\n            <Bar/>\r\n          </Card>\r\n\r\n          <Card title='任务' extra={<Icon type=\"reload\"/>} className=\"home-table-right\">\r\n            <Timeline>\r\n              <Timeline.Item color=\"green\">新版本迭代会</Timeline.Item>\r\n              <Timeline.Item color=\"green\">完成网站设计初版</Timeline.Item>\r\n              <Timeline.Item color=\"red\">\r\n                <p>联调接口</p>\r\n                <p>功能验收</p>\r\n              </Timeline.Item>\r\n              <Timeline.Item>\r\n                <p>登录功能设计</p>\r\n                <p>权限验证</p>\r\n                <p>页面排版</p>\r\n              </Timeline.Item>\r\n            </Timeline>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}"],"sourceRoot":""}