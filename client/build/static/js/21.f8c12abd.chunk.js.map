{"version":3,"sources":["pages/role/auth.js","pages/role/role.js"],"names":["iconStyle","color","TreeNode","Auth","state","visible","confirmLoading","menus","showModal","setState","handelAddUser","a","role","props","store","get","username","role_id","auth_name","reqSettingRole","message","success","_id","user","clearAll","history","replace","getUserList","handleCancel","onCheck","info","treeNodeRender","menuList","map","item","title","key","children","this","treeNodes","next","onOk","onCancel","okText","cancelText","centered","bodyStyle","overflow","Item","label","labelCol","sm","wrapperCol","prefix","type","style","disabled","value","name","checkable","defaultExpandedKeys","checkedKeys","Component","User","loading","tableData","roles","roleModal","roleRef","current","e","preventDefault","form","validateFields","err","values","reqAddRole","res","data","resetFields","deleteUser","record","reqDeleteRole","reqRoleList","rowSelection","columnTitle","selectedRowKeys","onSelect","tableOnRow","onClick","event","updateMeuns","React","createRef","columns","dataIndex","sorter","b","create_time","sortDirections","render","auth_time","moment","format","getFieldDecorator","cardTitle","marginLeft","onSubmit","className","rules","required","placeholder","ref","dataSource","bordered","rowKey","size","onRow","pagination","defaultCurrent","pageSize","total","length","create"],"mappings":"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","file":"static/js/21.f8c12abd.chunk.js","sourcesContent":["import React, { Component} from 'react';\nimport PropTypes from 'prop-types'\nimport {Modal,Tree,Input,Form,Icon,message} from 'antd'\nimport store from '../../utils/storeUtils'\nimport {reqSettingRole} from 'api'\nimport menuList from 'config/menuConfig'\nconst iconStyle={ color: 'rgba(0,0,0,.25)' }\nconst { TreeNode } = Tree;\n class Auth extends Component {\n  state = { \n    visible:false,\n    confirmLoading:false,\n    menus:[],//路由权限\n   }\n   showModal=()=>{\n     this.setState({\n       visible:true\n     })\n   }\n  //  设置权限\n   handelAddUser= async ()=>{\n    this.setState({\n      confirmLoading:true\n    })\n    const {role}= this.props\n    role.menus=this.state.menus  //自动更新了父组件的状态，改变了props的状态\n    const {username,role_id} = store.get('user_key')\n    role.auth_name = username\n    const res = await reqSettingRole(role)\n    if(res){\n      message.success('更新成功！')\n      // 如果用户更新的是自己的权限，重新登录\n      if(role._id===role_id){\n        store.user=null\n        store.clearAll()\n        // 在这里还需要reset redux 上的数据\n        // this.props.logout()\n        this.props.history.replace('/login')\n      }else {\n        this.setState({\n          confirmLoading:false,\n          visible:false,\n        })\n        this.props.getUserList()\n      }\n    }\n   }\n   handleCancel=()=>{\n    this.setState({\n      visible:false,\n      confirmLoading:false,\n      menus:this.props.role.menus\n    })\n   }\n\n  /**\n   * @description menus 得到checkbox选中的集合\n   * @description info 点击事件\n   */\n  // 更新了menus\n  onCheck = (menus, info) => {\n    this.setState({menus})\n  };\n  // 权限控件渲染\n  treeNodeRender=(menuList)=>(\n    menuList.map(item=>{\n        return (\n          <TreeNode title={item.title} key={item.key}>\n            { item.children?this.treeNodeRender(item.children):null}\n          </TreeNode>\n         )\n    })\n  )\n  componentDidMount() {\n    this.treeNodes=this.treeNodeRender(menuList)\n  }\n  // 这个方法已经不建议使用\n  UNSAFE_componentWillReceiveProps(next){\n    this.setState({\n      menus:next.role.menus\n    })\n  }\n  // shouldComponentUpdate(nextProps,nextState){\n  //   // 比较新旧props和state的数据\n  //   // if( this.props.role===nextProps.role || this.state.menus===nextState.menus){\n  //   //   return false\n  //   // }\n  //   return true\n  // }\n  render() {\n    // 每次需要拿到最新的role\n    const {role} = this.props \n    const {visible,confirmLoading,menus} = this.state\n    return (\n      <Modal\n        title=\"设置权限\"\n        visible={visible}\n        onOk={this.handelAddUser}\n        confirmLoading={confirmLoading}\n        onCancel={this.handleCancel}\n        okText=\"确认\"\n        cancelText=\"取消\"\n        centered\n        bodyStyle={{overflow:'auto'}}\n      >\n      <Form.Item label='角色名称' labelCol={{sm:4}} wrapperCol={{sm:16}}>\n          <Input prefix={<Icon type=\"user\" style={iconStyle}/>} disabled value={role.name}/>\n     </Form.Item>\n        <Tree\n          checkable\n          // defaultExpandAll\n          defaultExpandedKeys={['all']}\n          checkedKeys={menus}\n          onCheck={this.onCheck}\n        >\n          <TreeNode title=\"权限管理\" key=\"all\">\n           {this.treeNodes }\n          </TreeNode>\n       </Tree>\n    </Modal>\n    );\n  }\n}\nAuth.propTypes={\n  role:PropTypes.object.isRequired,\n}\n\nexport default Auth","import React, { Component } from 'react';\nimport {Card,Button,Modal,Form, Icon,Input,message,Table} from 'antd'\nimport moment from 'moment'\nimport {reqRoleList,reqAddRole,reqDeleteRole} from 'api'\nimport AuthModal from './auth'\nconst iconStyle={ color: 'rgba(0,0,0,.25)' }\nconst PAGE_SIZE=5\nclass User extends Component {\n  state = { \n    visible: false,\n    confirmLoading: false,\n    loading:false,\n    tableData:[],\n    role:{\n      menus:[]\n    },//选中的当前角色\n    roles:[],//角色的路由权限\n  }\n  constructor(){\n    super()\n   // 创建一个 ref 来存储 Modal 的 DOM 元素\n    this.roleRef=React.createRef()\n    this.columns = [\n      {\n        title: '角色名称',\n        dataIndex: 'name',\n      },\n      {\n        title: '授权人',\n        dataIndex: 'auth_name',\n      },\n      {\n        title: '授权时间',\n        dataIndex: 'auth_time',\n        sorter: (a, b) => a.create_time - b.create_time,\n        sortDirections: ['descend', 'ascend'],\n        render:(auth_time)=>(moment(auth_time).format('YYYY-MM-DD'))\n      },\n      {\n        title: '创建时间',\n        dataIndex: 'create_time',\n        sorter: (a, b) => a.create_time - b.create_time,\n        sortDirections: ['descend', 'ascend'],\n        render:(create_time)=>(moment(create_time).format('YYYY-MM-DD HH:mm:ss'))\n      },\n      {\n        title: '操作',\n        render:(record)=>(<Button type='link' onClick={()=> (this.deleteUser(record))}>删除</Button>)\n      },\n    ];\n  }  \n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n  roleModal = ()=>{\n    // 子组件的showModal\n    this.roleRef.current.showModal()\n  }\n  // 创建角色\n  handelAddUser = (e) => {\n    e.preventDefault();\n    this.props.form.validateFields( async (err, values) => {\n      if (!err) {\n        this.setState({\n          confirmLoading: true,\n        });\n        const res = await reqAddRole(values)\n        message.success('添加成功！')\n        // const {roles} = this.state\n        // roles.push(res.data) //这样会直接修改state的数据，不能这样写\n        // 写法一\n        // const roles = [...this.state.roles] //新产生一个数组\n        // roles.push(res.data)\n        // 写法二\n        this.setState(state=>({\n          roles:[...state.roles,res.data],\n          visible: false,\n          confirmLoading: false,\n        }))\n        this.props.form.resetFields()\n        // 更新列表\n        this.getUserList()\n      }else{\n        return\n      }\n    });\n  };\n  // 删除角色\n  deleteUser = async (record)=>{\n    this.setState({loading:true})\n    const {_id} = record\n    const res = await reqDeleteRole({_id})\n    if(res){\n      this.setState({loading:false})\n      message.success('删除成功！')\n      this.getUserList()\n    }\n  }\n  \n  handleCancel = () => {\n    // 取消的时候重置表单\n    this.props.form.resetFields()\n    this.setState({\n      visible: false,\n      confirmLoading: false,\n    });\n  };\n  // 角色列表\n  getUserList= async()=>{\n    this.setState({\n      loading:true\n    })\n    const res = await reqRoleList()\n    const {data} = res\n    this.setState({\n      loading:false,\n      tableData:data\n    })\n  }\n  componentDidMount(){\n    this.getUserList()\n  }\n  // 管理-CheckBox\n  rowSelection = ()=> ({\n    columnTitle:'管理',\n    type:'radio',\n    selectedRowKeys:this.state.role['_id'],\n    onSelect:(role)=>{\n      this.setState({role})\n    }\n  });\n  // table点击事件处理\n  tableOnRow= role => {\n    return {\n      onClick: event => { //点击行\n        this.setState({role})\n      }, \n    };\n  }\n  updateMeuns=(role)=>{\n    this.setState({\n      role\n    })\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { visible, confirmLoading,loading,tableData,role} = this.state;\n    const cardTitle=(\n      <span><Button type=\"primary\" onClick={this.showModal}>创建角色</Button>\n      <Button type=\"primary\" onClick={this.roleModal} disabled={!role['_id']} style={{marginLeft:'1rem'}}>设置权限</Button></span>\n     )\n    return (\n      <Card title={cardTitle}>\n        <Modal\n          title=\"创建角色\"\n          visible={visible}\n          onOk={this.handelAddUser}\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n          okText=\"确认\"\n          cancelText=\"取消\"\n        >\n        <Form onSubmit={this.handelAddUser} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('roleName', {\n              rules: [{ required: true, message: '请输入角色名称!' }],\n            })(\n              <Input\n                prefix={<Icon type=\"user\" style={iconStyle} />}\n                placeholder=\"角色名称\"\n              />\n            )}\n          </Form.Item>\n      </Form>\n      </Modal>\n          <AuthModal history={this.props.history} ref={this.roleRef} role={role} getUserList={()=>this.getUserList()}/>\n          <Table dataSource={tableData} columns={this.columns} bordered loading={loading} rowKey={'_id'} size={'small'} \n              rowSelection={this.rowSelection()} \n              onRow={this.tableOnRow}\n              pagination={{\n                  defaultCurrent:1,\n                  pageSize:PAGE_SIZE,\n                  total:tableData.length\n                }}\n          />\n      </Card>\n    )\n  }\n}\nexport default (Form.create({ name: 'normal_login' })(User));"],"sourceRoot":""}