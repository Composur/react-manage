{"version":3,"sources":["api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/login.jsx","config/menuConfig.js","components/left-nav/index.jsx","components/link-button/index.jsx","utils/dateUtils.js","components/header/index.jsx","pages/home/home.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.jsx","utils/constants.js","pages/product/home.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/product.jsx","pages/role/add-form.jsx","pages/role/auth-form.jsx","pages/role/role.jsx","pages/user/user-form.jsx","pages/user/user.jsx","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.jsx","pages/order/order.jsx","pages/admin/admin.jsx","App.js","index.js","assets/images/logo.png"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","axios","get","params","post","then","response","catch","error","message","reqLogin","username","password","BASE","reqCategorys","parentId","reqAddCategory","categoryName","reqUpdateCategory","_ref","categoryId","reqCategory","reqProducts","pageNum","pageSize","reqUpdateStatus","productId","status","reqSearchProducts","_ref2","searchName","searchType","Object","defineProperty","reqDeleteImg","name","reqAddOrUpdateProduct","product","_id","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","reqWeather","city","concat","jsonp","err","console","log","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","memoryUtils","storageUtils","saveUser","store","set","getUser","removeUser","remove","Item","es_form","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","asyncToGenerator","regenerator_default","a","mark","_callee","values","result","wrap","_context","prev","next","sent","success","history","replace","msg","stop","_x","_x2","apply","this","validatePwd","rule","value","callback","test","react_default","createElement","react_router","to","getFieldDecorator","className","src","logo","alt","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","es_button","htmlType","Component","WrapLogin","create","menuList","title","key","isPublic","children","SubMenu","menu","LeftNav","hasAuth","item","menus","indexOf","find","child","getMenuNodes_map","map","getMenuNodes","react_router_dom","path","location","pathname","reduce","pre","cItem","openKey","push","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","LinkButton","assign","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","Header","state","currentTime","now","getTime","intervalId","setInterval","setState","getWeather","getTitle","forEach","logout","modal","confirm","content","onOk","assertThisInitialized","clearInterval","_this$state","onClick","Home","Option","es_select","AddForm","setForm","_this$props","categorys","add_form_Item","c","add_form","UpdateForm","update_form_Item","update_form","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","width","render","category","showUpdate","showSubCategorys","getCategorys","showCategorys","handleCancel","resetFields","showAdd","addCategory","_callee2","_context2","_x3","updateCategory","_ref3","_callee3","_context3","_x4","_x5","_this2","marginRight","extra","card","table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","ProductHome","total","products","price","newStatus","updateStatus","getProducts","_result$data","list","_this$state2","onChange","home_Option","margin","target","current","PicturesWall","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","handleChange","imgs","img","index","uid","uploadButton","upload","action","accept","listType","onPreview","footer","React","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","_assertThisInitialize","isUpdate","pCategoryId","childOptions","label","isLeaf","option","abrupt","validatePrice","loadData","selectedOptions","targetOption","toConsumableArray","submit","_ref4","_callee4","desc","categoryIds","_context4","pw","editor","goBack","createRef","fontSize","labelCol","span","wrapperCol","add_update_Item","autosize","minRows","maxRows","addonAfter","cascader","pictures_wall_PicturesWall","ref","rich_text_editor_RichTextEditor","PureComponent","add_update","es_list","ProductDetail","cName1","cName2","all","_this$props$location$2","detail_Item","dangerouslySetInnerHTML","__html","Product","component","exact","role_add_form_Item","role_add_form","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","onCheck","treeNodes","nextProps","auth_form_Item","disabled","tree","checkable","defaultExpandAll","Role","roles","isShowAdd","isShowAuth","initColumn","create_time","getRoles","onRow","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","auth_form_AuthForm","UserForm","user_form_Item","phone","email","user_form_Option","user_form","User","users","isShow","roleNames","deleteUser","initRoleNames","_onOk","getUsers","addOrUpdateUser","getFieldsValue","Bar","sales","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","lib_default","Line","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","top","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","height","NotFound","row","col","Order","Footer","Sider","Content","Admin","layout","components_left_nav","components_header","from","textAlign","App","ReactDOM","App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.3765a565.chunk.js","sourcesContent":["/*\r\n能发送异步ajax请求的函数模块\r\n封装axios库\r\n函数的返回值是promise对象\r\n1. 优化1: 统一处理请求异常?\r\n    在外层包一个自己创建的promise对象\r\n    在请求出错时, 不reject(error), 而是显示错误提示\r\n2. 优化2: 异步得到不是reponse, 而是response.data\r\n   在请求成功resolve时: resolve(response.data)\r\n */\r\n\r\nimport axios from 'axios'\r\nimport {message} from 'antd'\r\n\r\nexport default function ajax(url, data={}, type='GET') {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    let promise\r\n    // 1. 执行异步ajax请求\r\n    if(type==='GET') { // 发GET请求\r\n      promise = axios.get(url, { // 配置对象\r\n        params: data // 指定请求参数\r\n      })\r\n    } else { // 发POST请求\r\n      promise = axios.post(url, data)\r\n    }\r\n    // 2. 如果成功了, 调用resolve(value)\r\n    promise.then(response => {\r\n      resolve(response.data)\r\n    // 3. 如果失败了, 不调用reject(reason), 而是提示异常信息\r\n    }).catch(error => {\r\n      // reject(error)\r\n      message.error('请求出错了: ' + error.message)\r\n    })\r\n  })\r\n\r\n\r\n}\r\n\r\n// 请求登陆接口\r\n// ajax('/login', {username: 'Tom', passsword: '12345'}, 'POST').then()\r\n// 添加用户\r\n// ajax('/manage/user/add', {username: 'Tom', passsword: '12345', phone: '13712341234'}, 'POST').then()\r\n","/*\r\n要求: 能根据接口文档定义接口请求\r\n包含应用中所有接口请求函数的模块\r\n每个函数的返回值都是promise\r\n\r\n基本要求: 能根据接口文档定义接口请求函数\r\n */\r\nimport jsonp from 'jsonp'\r\nimport {message} from 'antd'\r\nimport ajax from './ajax'\r\n\r\n// const BASE = 'http://localhost:5000'\r\nconst BASE = '/api'\r\n// 登陆\r\n/*\r\nexport function reqLogin(username, password) {\r\n  return ajax('/login', {username, password}, 'POST')\r\n}*/\r\nexport const reqLogin = (username, password) => ajax(BASE + '/login', {username, password}, 'POST')\r\n\r\n// 获取一级/二级分类的列表\r\nexport const reqCategorys = (parentId) => ajax(BASE + '/manage/category/list', {parentId})\r\n\r\n// 添加分类\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(BASE + '/manage/category/add', {categoryName, parentId}, 'POST')\r\n\r\n// 更新分类\r\nexport const reqUpdateCategory = ({categoryId, categoryName}) => ajax(BASE + '/manage/category/update', {categoryId, categoryName}, 'POST')\r\n\r\n// 获取一个分类\r\nexport const reqCategory = (categoryId) => ajax(BASE + '/manage/category/info', {categoryId})\r\n\r\n// 获取商品分页列表\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + '/manage/product/list', {pageNum, pageSize})\r\n\r\n// 更新商品的状态(上架/下架)\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + '/manage/product/updateStatus', {productId, status}, 'POST')\r\n\r\n\r\n\r\n/*\r\n搜索商品分页列表 (根据商品名称/商品描述)\r\nsearchType: 搜索的类型, productName/productDesc\r\n */\r\nexport const reqSearchProducts = ({pageNum, pageSize, searchName, searchType}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  [searchType]: searchName,\r\n})\r\n\r\n// 搜索商品分页列表 (根据商品描述)\r\n/*export const reqSearchProducts2 = ({pageNum, pageSize, searchName}) => ajax(BASE + '/manage/product/search', {\r\n  pageNum,\r\n  pageSize,\r\n  productDesc: searchName,\r\n})*/\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + '/manage/img/delete', {name}, 'POST')\r\n\r\n// 添加/修改商品\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + '/manage/product/' + ( product._id?'update':'add'), product, 'POST')\r\n// 修改商品\r\n// export const reqUpdateProduct = (product) => ajax(BASE + '/manage/product/update', product, 'POST')\r\n\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + '/manage/role/list')\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + '/manage/role/add', {roleName}, 'POST')\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + '/manage/role/update', role, 'POST')\r\n\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + '/manage/user/list')\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + '/manage/user/delete', {userId}, 'POST')\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + '/manage/user/'+(user._id ? 'update' : 'add'), user, 'POST')\r\n\r\n/*\r\njson请求的接口请求函数\r\n */\r\nexport const reqWeather = (city) => {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      console.log('jsonp()', err, data)\r\n      // 如果成功了\r\n      if (!err && data.status==='success') {\r\n        // 取出需要的数据\r\n        const {dayPictureUrl, weather} = data.results[0].weather_data[0]\r\n        resolve({dayPictureUrl, weather})\r\n      } else {\r\n        // 如果失败了\r\n        message.error('获取天气信息失败!')\r\n      }\r\n\r\n    })\r\n  })\r\n}\r\n// reqWeather('北京')\r\n/*\r\njsonp解决ajax跨域的原理\r\n  1). jsonp只能解决GET类型的ajax请求跨域问题\r\n  2). jsonp请求不是ajax请求, 而是一般的get请求\r\n  3). 基本原理\r\n   浏览器端:\r\n      动态生成<script>来请求后台接口(src就是接口的url)\r\n      定义好用于接收响应数据的函数(fn), 并将函数名通过请求参数提交给后台(如: callback=fn)\r\n   服务器端:\r\n      接收到请求处理产生结果数据后, 返回一个函数调用的js代码, 并将结果数据作为实参传入函数调用\r\n   浏览器端:\r\n      收到响应自动执行函数调用的js代码, 也就执行了提前定义好的回调函数, 并得到了需要的结果数据\r\n */","/*\r\n用来在内存保存一些数据的工具模块\r\n */\r\nexport default {\r\n  user: {}, // 保存当前登陆的user\r\n}","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from 'store'\r\nconst USER_KEY = 'user_key'\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser (user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user)\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser () {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {}\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser () {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY)\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport {\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Button,\r\n  message\r\n} from 'antd'\r\nimport './login.less'\r\nimport logo from '../../assets/images/logo.png'\r\nimport {reqLogin} from '../../api'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\n\r\n\r\nconst Item = Form.Item // 不能写在import之前\r\n\r\n\r\n/*\r\n登陆的路由组件\r\n */\r\nclass Login extends Component {\r\n\r\n  handleSubmit = (event) => {\r\n\r\n    // 阻止事件的默认行为\r\n    event.preventDefault()\r\n\r\n    // 对所有表单字段进行检验\r\n    this.props.form.validateFields(async (err, values) => {\r\n      // 检验成功\r\n      if (!err) {\r\n        // console.log('提交登陆的ajax请求', values)\r\n        // 请求登陆\r\n        const {username, password} = values\r\n        const result = await reqLogin(username, password) // {status: 0, data: user}  {status: 1, msg: 'xxx'}\r\n        // console.log('请求成功', result)\r\n        if (result.status===0) { // 登陆成功\r\n          // 提示登陆成功\r\n          message.success('登陆成功')\r\n\r\n          // 保存user\r\n          const user = result.data\r\n          memoryUtils.user = user // 保存在内存中\r\n          storageUtils.saveUser(user) // 保存到local中\r\n\r\n          // 跳转到管理界面 (不需要再回退回到登陆)\r\n          this.props.history.replace('/')\r\n\r\n        } else { // 登陆失败\r\n          // 提示错误信息\r\n          message.error(result.msg)\r\n        }\r\n\r\n      } else {\r\n        console.log('检验失败!')\r\n      }\r\n    });\r\n\r\n    // 得到form对象\r\n    // const form = this.props.form\r\n    // // 获取表单项的输入数据\r\n    // const values = form.getFieldsValue()\r\n    // console.log('handleSubmit()', values)\r\n  }\r\n\r\n  /*\r\n  对密码进行自定义验证\r\n  */\r\n  /*\r\n   用户名/密码的的合法性要求\r\n     1). 必须输入\r\n     2). 必须大于等于4位\r\n     3). 必须小于等于12位\r\n     4). 必须是英文、数字或下划线组成\r\n    */\r\n  validatePwd = (rule, value, callback) => {\r\n    console.log('validatePwd()', rule, value)\r\n    if(!value) {\r\n      callback('密码必须输入')\r\n    } else if (value.length<4) {\r\n      callback('密码长度不能小于4位')\r\n    } else if (value.length>12) {\r\n      callback('密码长度不能大于12位')\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback('密码必须是英文、数字或下划线组成')\r\n    } else {\r\n      callback() // 验证通过\r\n    }\r\n    // callback('xxxx') // 验证失败, 并指定提示的文本\r\n  }\r\n\r\n  render () {\r\n\r\n    // 如果用户已经登陆, 自动跳转到管理界面\r\n    const user = memoryUtils.user\r\n    if(user && user._id) {\r\n      return <Redirect to='/'/>\r\n    }\r\n\r\n    // 得到具强大功能的form对象\r\n    const form = this.props.form\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <header className=\"login-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>React项目: 后台管理系统</h1>\r\n        </header>\r\n        <section className=\"login-content\">\r\n          <h2>用户登陆</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {\r\n                /*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */\r\n              }\r\n              {\r\n                getFieldDecorator('username', { // 配置对象: 属性名是特定的一些名称\r\n                  // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                  rules: [\r\n                    { required: true, whitespace: true, message: '用户名必须输入' },\r\n                    { min: 4, message: '用户名至少4位' },\r\n                    { max: 12, message: '用户名最多12位' },\r\n                    { pattern: /^[a-zA-Z0-9_]+$/, message: '用户名必须是英文、数字或下划线组成' },\r\n                  ],\r\n                  initialValue: 'admin', // 初始值\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    placeholder=\"用户名\"\r\n                  />\r\n                )\r\n              }\r\n            </Item>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [\r\n                    {\r\n                      validator: this.validatePwd\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n                    type=\"password\"\r\n                    placeholder=\"密码\"\r\n                  />\r\n                )\r\n              }\r\n\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                登陆\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n1. 高阶函数\r\n    1). 一类特别的函数\r\n        a. 接受函数类型的参数\r\n        b. 返回值是函数\r\n    2). 常见\r\n        a. 定时器: setTimeout()/setInterval()\r\n        b. Promise: Promise(() => {}) then(value => {}, reason => {})\r\n        c. 数组遍历相关的方法: forEach()/filter()/map()/reduce()/find()/findIndex()\r\n        d. 函数对象的bind()\r\n        e. Form.create()() / getFieldDecorator()()\r\n    3). 高阶函数更新动态, 更加具有扩展性\r\n\r\n2. 高阶组件\r\n    1). 本质就是一个函数\r\n    2). 接收一个组件(被包装组件), 返回一个新的组件(包装组件), 包装组件会向被包装组件传入特定属性\r\n    3). 作用: 扩展组件的功能\r\n    4). 高阶组件也是高阶函数: 接收一个组件函数, 返回是一个新的组件函数\r\n */\r\n/*\r\n包装Form组件生成一个新的组件: Form(Login)\r\n新组件会向Form组件传递一个强大的对象属性: form\r\n */\r\nconst WrapLogin = Form.create()(Login)\r\nexport default WrapLogin\r\n/*\r\n1. 前台表单验证\r\n2. 收集表单输入数据\r\n */\r\n\r\n/*\r\nasync和await\r\n1. 作用?\r\n   简化promise对象的使用: 不用再使用then()来指定成功/失败的回调函数\r\n   以同步编码(没有回调函数了)方式实现异步流程\r\n2. 哪里写await?\r\n    在返回promise的表达式左侧写await: 不想要promise, 想要promise异步执行的成功的value数据\r\n3. 哪里写async?\r\n    await所在函数(最近的)定义的左侧写async\r\n */","const menuList = [\r\n  {\r\n    title: '首页', // 菜单标题名称\r\n    key: '/home', // 对应的path\r\n    icon: 'home', // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: '商品',\r\n    key: '/products',\r\n    icon: 'appstore',\r\n    children: [ // 子菜单列表\r\n      {\r\n        title: '品类管理',\r\n        key: '/category',\r\n        icon: 'bars'\r\n      },\r\n      {\r\n        title: '商品管理',\r\n        key: '/product',\r\n        icon: 'tool'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '用户管理',\r\n    key: '/user',\r\n    icon: 'user'\r\n  },\r\n  {\r\n    title: '角色管理',\r\n    key: '/role',\r\n    icon: 'safety',\r\n  },\r\n\r\n  {\r\n    title: '图形图表',\r\n    key: '/charts',\r\n    icon: 'area-chart',\r\n    children: [\r\n      {\r\n        title: '柱形图',\r\n        key: '/charts/bar',\r\n        icon: 'bar-chart'\r\n      },\r\n      {\r\n        title: '折线图',\r\n        key: '/charts/line',\r\n        icon: 'line-chart'\r\n      },\r\n      {\r\n        title: '饼图',\r\n        key: '/charts/pie',\r\n        icon: 'pie-chart'\r\n      },\r\n    ]\r\n  },\r\n\r\n  {\r\n    title: '订单管理',\r\n    key: '/order',\r\n    icon: 'windows',\r\n  },\r\n]\r\n\r\nexport default menuList","import React, {Component} from 'react'\r\nimport {Link, withRouter} from 'react-router-dom'\r\nimport {Menu, Icon} from 'antd';\r\n\r\nimport logo from '../../assets/images/logo.png'\r\nimport menuList from '../../config/menuConfig'\r\nimport './index.less'\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass LeftNav extends Component {\r\n\r\n  /*\r\n  判断当前登陆用户对item是否有权限\r\n   */\r\n  hasAuth = (item) => {\r\n    const {key, isPublic} = item\r\n\r\n    const menus = memoryUtils.user.role.menus\r\n    const username = memoryUtils.user.username\r\n    /*\r\n    1. 如果当前用户是admin\r\n    2. 如果当前item是公开的\r\n    3. 当前用户有此item的权限: key有没有menus中\r\n     */\r\n    if(username==='admin' || isPublic || menus.indexOf(key)!==-1) {\r\n      return true\r\n    } else if(item.children){ // 4. 如果当前用户有此item的某个子item的权限\r\n      return !!item.children.find(child =>  menus.indexOf(child.key)!==-1)\r\n    }\r\n\r\n    return false\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用map() + 递归调用\r\n  */\r\n  getMenuNodes_map = (menuList) => {\r\n    return menuList.map(item => {\r\n      /*\r\n        {\r\n          title: '首页', // 菜单标题名称\r\n          key: '/home', // 对应的path\r\n          icon: 'home', // 图标名称\r\n          children: [], // 可能有, 也可能没有\r\n        }\r\n\r\n        <Menu.Item key=\"/home\">\r\n          <Link to='/home'>\r\n            <Icon type=\"pie-chart\"/>\r\n            <span>首页</span>\r\n          </Link>\r\n        </Menu.Item>\r\n\r\n        <SubMenu\r\n          key=\"sub1\"\r\n          title={\r\n            <span>\r\n              <Icon type=\"mail\"/>\r\n              <span>商品</span>\r\n            </span>\r\n          }\r\n        >\r\n          <Menu.Item/>\r\n          <Menu.Item/>\r\n        </SubMenu>\r\n      */\r\n      if(!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        )\r\n      } else {\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n            }\r\n          >\r\n            {this.getMenuNodes(item.children)}\r\n          </SubMenu>\r\n        )\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  /*\r\n  根据menu的数据数组生成对应的标签数组\r\n  使用reduce() + 递归调用\r\n  */\r\n  getMenuNodes = (menuList) => {\r\n    // 得到当前请求的路由路径\r\n    const path = this.props.location.pathname\r\n\r\n    return menuList.reduce((pre, item) => {\r\n\r\n      // 如果当前用户有item对应的权限, 才需要显示对应的菜单项\r\n      if (this.hasAuth(item)) {\r\n        // 向pre添加<Menu.Item>\r\n        if(!item.children) {\r\n          pre.push((\r\n            <Menu.Item key={item.key}>\r\n              <Link to={item.key}>\r\n                <Icon type={item.icon}/>\r\n                <span>{item.title}</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          ))\r\n        } else {\r\n\r\n          // 查找一个与当前请求路径匹配的子Item\r\n          const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n          // 如果存在, 说明当前item的子列表需要打开\r\n          if (cItem) {\r\n            this.openKey = item.key\r\n          }\r\n\r\n\r\n          // 向pre添加<SubMenu>\r\n          pre.push((\r\n            <SubMenu\r\n              key={item.key}\r\n              title={\r\n                <span>\r\n              <Icon type={item.icon}/>\r\n              <span>{item.title}</span>\r\n            </span>\r\n              }\r\n            >\r\n              {this.getMenuNodes(item.children)}\r\n            </SubMenu>\r\n          ))\r\n        }\r\n      }\r\n\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  /*\r\n  在第一次render()之前执行一次\r\n  为第一个render()准备数据(必须同步的)\r\n   */\r\n  componentWillMount () {\r\n    this.menuNodes = this.getMenuNodes(menuList)\r\n  }\r\n\r\n  render() {\r\n    // debugger\r\n    // 得到当前请求的路由路径\r\n    let path = this.props.location.pathname\r\n    console.log('render()', path)\r\n    if(path.indexOf('/product')===0) { // 当前请求的是商品或其子路由界面\r\n      path = '/product'\r\n    }\r\n\r\n    // 得到需要打开菜单项的key\r\n    const openKey = this.openKey\r\n\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to='/' className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\"/>\r\n          <h1>硅谷后台</h1>\r\n        </Link>\r\n\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"dark\"\r\n          selectedKeys={[path]}\r\n          defaultOpenKeys={[openKey]}\r\n        >\r\n\r\n          {\r\n            this.menuNodes\r\n          }\r\n\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\nwithRouter高阶组件:\r\n包装非路由组件, 返回一个新的组件\r\n新的组件向非路由组件传递3个属性: history/location/match\r\n */\r\nexport default withRouter(LeftNav)","import React from 'react'\r\nimport './index.less'\r\n/*\r\n外形像链接的按钮\r\n */\r\nexport default function LinkButton(props) {\r\n  return <button {...props} className=\"link-button\"></button>\r\n}","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React, {Component} from 'react'\r\nimport {withRouter} from 'react-router-dom'\r\nimport { Modal} from 'antd'\r\n\r\nimport LinkButton from '../link-button'\r\nimport {reqWeather} from '../../api'\r\nimport menuList from '../../config/menuConfig'\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport storageUtils from '../../utils/storageUtils'\r\nimport './index.less'\r\n\r\n/*\r\n左侧导航的组件\r\n */\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    currentTime: formateDate(Date.now()), // 当前时间字符串\r\n    dayPictureUrl: '', // 天气图片url\r\n    weather: '', // 天气的文本\r\n  }\r\n\r\n  getTime = () => {\r\n    // 每隔1s获取当前时间, 并更新状态数据currentTime\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now())\r\n      this.setState({currentTime})\r\n    }, 1000)\r\n  }\r\n\r\n  getWeather = async () => {\r\n    // 调用接口请求异步获取数据\r\n    const {dayPictureUrl, weather} = await reqWeather('北京')\r\n    // 更新状态\r\n    this.setState({dayPictureUrl, weather})\r\n  }\r\n\r\n  getTitle = () => {\r\n    // 得到当前请求路径\r\n    const path = this.props.location.pathname\r\n    let title\r\n    menuList.forEach(item => {\r\n      if (item.key===path) { // 如果当前item对象的key与path一样,item的title就是需要显示的title\r\n        title = item.title\r\n      } else if (item.children) {\r\n        // 在所有子item中查找匹配的\r\n        const cItem = item.children.find(cItem => path.indexOf(cItem.key)===0)\r\n        // 如果有值才说明有匹配的\r\n        if(cItem) {\r\n          // 取出它的title\r\n          title = cItem.title\r\n        }\r\n      }\r\n    })\r\n    return title\r\n  }\r\n\r\n  /*\r\n  退出登陆\r\n   */\r\n  logout = () => {\r\n    // 显示确认框\r\n    Modal.confirm({\r\n      content: '确定退出吗?',\r\n      onOk: () => {\r\n        console.log('OK', this)\r\n        // 删除保存的user数据\r\n        storageUtils.removeUser()\r\n        memoryUtils.user = {}\r\n\r\n        // 跳转到login\r\n        this.props.history.replace('/login')\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  第一次render()之后执行一次\r\n  一般在此执行异步操作: 发ajax请求/启动定时器\r\n   */\r\n  componentDidMount () {\r\n    // 获取当前的时间\r\n    this.getTime()\r\n    // 获取当前天气\r\n    this.getWeather()\r\n  }\r\n  /*\r\n  // 不能这么做: 不会更新显示\r\n  componentWillMount () {\r\n    this.title = this.getTitle()\r\n  }*/\r\n\r\n  /*\r\n  当前组件卸载之前调用\r\n   */\r\n  componentWillUnmount () {\r\n    // 清除定时器\r\n    clearInterval(this.intervalId)\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {currentTime, dayPictureUrl, weather} = this.state\r\n\r\n    const username = memoryUtils.user.username\r\n\r\n    // 得到当前需要显示的title\r\n    const title = this.getTitle()\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>欢迎, {username}</span>\r\n          <LinkButton onClick={this.logout}>退出</LinkButton>\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{currentTime}</span>\r\n            <img src={dayPictureUrl} alt=\"weather\"/>\r\n            <span>{weather}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Header)","import React from 'react'\r\nimport './home.less'\r\n\r\n/*\r\nHome路由组件\r\n */\r\nexport default function Home(props) {\r\n  return (\r\n    <div className=\"home\">\r\n      欢迎使用硅谷后台管理系统\r\n    </div>\r\n  )\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const {categorys, parentId} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('parentId', {\r\n              initialValue: parentId\r\n            })(\r\n              <Select>\r\n                <Option value='0'>一级分类</Option>\r\n                {\r\n                  categorys.map(c => <Option value={c._id}>{c.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n\r\n        </Item>\r\n\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n更新分类的form组件\r\n */\r\nclass UpdateForm extends Component {\r\n\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 将form对象通过setForm()传递父组件\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {categoryName} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Icon,\r\n  message,\r\n  Modal\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqUpdateCategory, reqAddCategory} from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\n/*\r\n商品分类路由\r\n */\r\nexport default class Category extends Component {\r\n\r\n  state = {\r\n    loading: false, // 是否正在获取数据中\r\n    categorys: [], // 一级分类列表\r\n    subCategorys: [], // 二级分类列表\r\n    parentId: '0', // 当前需要显示的分类列表的父分类ID\r\n    parentName: '', // 当前需要显示的分类列表的父分类名称\r\n    showStatus: 0, // 标识添加/更新的确认框是否显示, 0: 都不显示, 1: 显示添加, 2: 显示更新\r\n  }\r\n\r\n  /*\r\n  初始化Table所有列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '分类的名称',\r\n        dataIndex: 'name', // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: '操作',\r\n        width: 300,\r\n        render: (category) => ( // 返回需要显示的界面标签\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton>\r\n            {/*如何向事件回调函数传递参数: 先定义一个匿名函数, 在函数调用处理的函数并传入数据*/}\r\n            {this.state.parentId==='0' ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null}\r\n\r\n          </span>\r\n        )\r\n      }\r\n    ]\r\n  }\r\n\r\n\r\n  /*\r\n  异步获取一级/二级分类列表显示\r\n  parentId: 如果没有指定根据状态中的parentId请求, 如果指定了根据指定的请求\r\n   */\r\n  getCategorys = async (parentId) => {\r\n\r\n    // 在发请求前, 显示loading\r\n    this.setState({loading: true})\r\n    parentId = parentId || this.state.parentId\r\n    // 发异步ajax请求, 获取数据\r\n    const result = await reqCategorys(parentId)\r\n    // 在请求完成后, 隐藏loading\r\n    this.setState({loading: false})\r\n\r\n    if(result.status===0) {\r\n      // 取出分类数组(可能是一级也可能二级的)\r\n      const categorys = result.data\r\n      if(parentId==='0') {\r\n        // 更新一级分类状态\r\n        this.setState({\r\n          categorys\r\n        })\r\n        console.log('----', this.state.categorys.length)\r\n      } else {\r\n        // 更新二级分类状态\r\n        this.setState({\r\n          subCategorys: categorys\r\n        })\r\n      }\r\n    } else {\r\n      message.error('获取分类列表失败')\r\n    }\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类对象的二子列表\r\n   */\r\n  showSubCategorys = (category) => {\r\n    // 更新状态\r\n    this.setState({\r\n      parentId: category._id,\r\n      parentName: category.name\r\n    }, () => { // 在状态更新且重新render()后执行\r\n      console.log('parentId', this.state.parentId) // '0'\r\n      // 获取二级分类列表显示\r\n      this.getCategorys()\r\n    })\r\n\r\n    // setState()不能立即获取最新的状态: 因为setState()是异步更新状态的\r\n    // console.log('parentId', this.state.parentId) // '0'\r\n  }\r\n\r\n  /*\r\n  显示指定一级分类列表\r\n   */\r\n  showCategorys = () => {\r\n    // 更新为显示一列表的状态\r\n    this.setState({\r\n      parentId: '0',\r\n      parentName: '',\r\n      subCategorys: []\r\n    })\r\n  }\r\n\r\n  /*\r\n  响应点击取消: 隐藏确定框\r\n   */\r\n  handleCancel = () => {\r\n    // 清除输入数据\r\n    this.form.resetFields()\r\n    // 隐藏确认框\r\n    this.setState({\r\n      showStatus: 0\r\n    })\r\n  }\r\n\r\n  /*\r\n  显示添加的确认框\r\n   */\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加分类\r\n   */\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 收集数据, 并提交添加分类的请求\r\n        const {parentId, categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n        const result = await reqAddCategory(categoryName, parentId)\r\n        if(result.status===0) {\r\n\r\n          // 添加的分类就是当前分类列表下的分类\r\n          if(parentId===this.state.parentId) {\r\n            // 重新获取当前分类列表显示\r\n            this.getCategorys()\r\n          } else if (parentId==='0'){ // 在二级分类列表下添加一级分类, 重新获取一级分类列表, 但不需要显示一级列表\r\n            this.getCategorys('0')\r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  /*\r\n  显示修改的确认框\r\n   */\r\n  showUpdate = (category) => {\r\n    // 保存分类对象\r\n    this.category = category\r\n    // 更新状态\r\n    this.setState({\r\n      showStatus: 2\r\n    })\r\n  }\r\n\r\n  /*\r\n  更新分类\r\n   */\r\n  updateCategory = () => {\r\n    console.log('updateCategory()')\r\n    // 进行表单验证, 只有通过了才处理\r\n    this.form.validateFields(async (err, values) => {\r\n      if(!err) {\r\n        // 1. 隐藏确定框\r\n        this.setState({\r\n          showStatus: 0\r\n        })\r\n\r\n        // 准备数据\r\n        const categoryId = this.category._id\r\n        const {categoryName} = values\r\n        // 清除输入数据\r\n        this.form.resetFields()\r\n\r\n        // 2. 发请求更新分类\r\n        const result = await reqUpdateCategory({categoryId, categoryName})\r\n        if (result.status===0) {\r\n          // 3. 重新显示列表\r\n          this.getCategorys()\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /*\r\n  为第一次render()准备数据\r\n   */\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  /*\r\n  执行异步任务: 发异步ajax请求\r\n   */\r\n  componentDidMount () {\r\n    // 获取一级分类列表显示\r\n    this.getCategorys()\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取状态数据\r\n    const {categorys, subCategorys, parentId, parentName, loading, showStatus} = this.state\r\n    // 读取指定的分类\r\n    const category = this.category || {} // 如果还没有指定一个空对象\r\n\r\n    // card的左侧\r\n    const title = parentId === '0' ? '一级分类列表' : (\r\n      <span>\r\n        <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton>\r\n        <Icon type='arrow-right' style={{marginRight: 5}}/>\r\n        <span>{parentName}</span>\r\n      </span>\r\n    )\r\n    // Card的右侧\r\n    const extra = (\r\n      <Button type='primary' onClick={this.showAdd}>\r\n        <Icon type='plus'/>\r\n        添加\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={parentId==='0' ? categorys : subCategorys}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 5, showQuickJumper: true}}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加分类\"\r\n          visible={showStatus===1}\r\n          onOk={this.addCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"更新分类\"\r\n          visible={showStatus===2}\r\n          onOk={this.updateCategory}\r\n          onCancel={this.handleCancel}\r\n        >\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {this.form = form}}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Select,\r\n  Input,\r\n  Button,\r\n  Icon,\r\n  Table,\r\n  message\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqProducts, reqSearchProducts, reqUpdateStatus} from '../../api'\r\nimport {PAGE_SIZE} from '../../utils/constants'\r\n\r\nconst Option = Select.Option\r\n\r\n/*\r\nProduct的默认子路由组件\r\n */\r\nexport default class ProductHome extends Component {\r\n\r\n  state = {\r\n    total: 0, // 商品的总数量\r\n    products: [], // 商品的数组\r\n    loading: false, // 是否正在加载中\r\n    searchName: '', // 搜索的关键字\r\n    searchType: 'productName', // 根据哪个字段搜索\r\n  }\r\n\r\n  /*\r\n  初始化table的列的数组\r\n   */\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '商品名称',\r\n        dataIndex: 'name',\r\n      },\r\n      {\r\n        title: '商品描述',\r\n        dataIndex: 'desc',\r\n      },\r\n      {\r\n        title: '价格',\r\n        dataIndex: 'price',\r\n        render: (price) => '¥' + price  // 当前指定了对应的属性, 传入的是对应的属性值\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '状态',\r\n        // dataIndex: 'status',\r\n        render: (product) => {\r\n          const {status, _id} = product\r\n          const newStatus = status===1 ? 2 : 1\r\n          return (\r\n            <span>\r\n              <Button\r\n                type='primary'\r\n                onClick={() => this.updateStatus(_id, newStatus)}\r\n              >\r\n                {status===1 ? '下架' : '上架'}\r\n              </Button>\r\n              <span>{status===1 ? '在售' : '已下架'}</span>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n      {\r\n        width: 100,\r\n        title: '操作',\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              {/*将product对象使用state传递给目标路由组件*/}\r\n              <LinkButton onClick={() => this.props.history.push('/product/detail', {product})}>详情</LinkButton>\r\n              <LinkButton onClick={() => this.props.history.push('/product/addupdate', product)}>修改</LinkButton>\r\n            </span>\r\n          )\r\n        }\r\n      },\r\n    ];\r\n  }\r\n\r\n  /*\r\n  获取指定页码的列表数据显示\r\n   */\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum // 保存pageNum, 让其它方法可以看到\r\n    this.setState({loading: true}) // 显示loading\r\n\r\n    const {searchName, searchType} = this.state\r\n    // 如果搜索关键字有值, 说明我们要做搜索分页\r\n    let result\r\n    if (searchName) {\r\n      result = await reqSearchProducts({pageNum, pageSize: PAGE_SIZE, searchName, searchType})\r\n    } else { // 一般分页请求\r\n      result = await reqProducts(pageNum, PAGE_SIZE)\r\n    }\r\n\r\n    this.setState({loading: false}) // 隐藏loading\r\n    if (result.status === 0) {\r\n      // 取出分页数据, 更新状态, 显示分页列表\r\n      const {total, list} = result.data\r\n      this.setState({\r\n        total,\r\n        products: list\r\n      })\r\n    }\r\n  }\r\n\r\n  /*\r\n  更新指定商品的状态\r\n   */\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status)\r\n    if(result.status===0) {\r\n      message.success('更新商品成功')\r\n      this.getProducts(this.pageNum)\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getProducts(1)\r\n  }\r\n\r\n  render() {\r\n\r\n    // 取出状态数据\r\n    const {products, total, loading, searchType, searchName} = this.state\r\n\r\n\r\n\r\n    const title = (\r\n      <span>\r\n        <Select\r\n          value= {searchType}\r\n          style={{width: 150}}\r\n          onChange={value => this.setState({searchType:value})}\r\n        >\r\n          <Option value='productName'>按名称搜索</Option>\r\n          <Option value='productDesc'>按描述搜索</Option>\r\n        </Select>\r\n        <Input\r\n          placeholder='关键字'\r\n          style={{width: 150, margin: '0 15px'}}\r\n          value={searchName}\r\n          onChange={event => this.setState({searchName:event.target.value})}\r\n        />\r\n        <Button type='primary' onClick={() => this.getProducts(1)}>搜索</Button>\r\n      </span>\r\n    )\r\n\r\n    const extra = (\r\n      <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n        <Icon type='plus'/>\r\n        添加商品\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          pagination={{\r\n            current: this.pageNum,\r\n            total,\r\n            defaultPageSize: PAGE_SIZE,\r\n            showQuickJumper: true,\r\n            onChange: this.getProducts\r\n          }}\r\n        />\r\n      </Card>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Upload, Icon, Modal, message } from 'antd'\r\nimport {reqDeleteImg} from '../../api'\r\nimport {BASE_IMG_URL} from \"../../utils/constants\";\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n\r\n  static propTypes = {\r\n    imgs: PropTypes.array\r\n  }\r\n\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: '', // 大图的url\r\n    fileList: [\r\n      /*{\r\n        uid: '-1', // 每个file都有自己唯一的id\r\n        name: 'xxx.png', // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n      },*/\r\n    ],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    let fileList = []\r\n\r\n    // 如果传入了imgs属性\r\n    const {imgs} = this.props\r\n    if (imgs && imgs.length>0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img\r\n      }))\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: '', // 大图的url\r\n      fileList // 所有已上传图片的数组\r\n    }\r\n  }\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs  = () => {\r\n    return this.state.fileList.map(file => file.name)\r\n  }\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = file => {\r\n    console.log('handlePreview()', file)\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log('handleChange()', file.status, fileList.length, file===fileList[fileList.length-1])\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if(file.status==='done') {\r\n      const result = file.response  // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if(result.status===0) {\r\n        message.success('上传图片成功!')\r\n        const {name, url} = result.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n      } else {\r\n        message.error('上传图片失败')\r\n      }\r\n    } else if (file.status==='removed') { // 删除图片\r\n      const result = await reqDeleteImg(file.name)\r\n      if (result.status===0) {\r\n        message.success('删除图片成功!')\r\n      } else {\r\n        message.error('删除图片失败!')\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n    this.setState({ fileList })\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n          accept='image/*'  /*只接收图片格式*/\r\n          name='image' /*请求参数名*/\r\n          listType=\"picture-card\"  /*卡片样式*/\r\n          fileList={fileList}  /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}\r\n        >\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js'\r\nimport {Editor} from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\n\r\n\r\nexport default class RichTextEditor extends Component {\r\n  \r\n  static propTypes = {\r\n    detail: PropTypes.string\r\n  }\r\n  \r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    const html = this.props.detail\r\n    if (html) { // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html)\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n      const editorState = EditorState.createWithContent(contentState)\r\n      this.state = {\r\n        editorState,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    console.log('onEditorStateChange()')\r\n    this.setState({\r\n      editorState,\r\n    })\r\n  }\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n  }\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise(\r\n      (resolve, reject) => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.open('POST', '/manage/img/upload')\r\n        const data = new FormData()\r\n        data.append('image', file)\r\n        xhr.send(data)\r\n        xhr.addEventListener('load', () => {\r\n          const response = JSON.parse(xhr.responseText)\r\n          const url = response.data.url // 得到图片的url\r\n          resolve({data: {link: url}})\r\n        })\r\n        xhr.addEventListener('error', () => {\r\n          const error = JSON.parse(xhr.responseText)\r\n          reject(error)\r\n        })\r\n      }\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const {editorState} = this.state\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{border: '1px solid black', minHeight: 200, paddingLeft: 10}}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    )\r\n  }\r\n}","import React, {PureComponent} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  Form,\r\n  Input,\r\n  Cascader,\r\n  Button,\r\n  message\r\n} from 'antd'\r\n\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport LinkButton from '../../components/link-button'\r\nimport {reqCategorys, reqAddOrUpdateProduct} from '../../api'\r\n\r\nconst {Item} = Form\r\nconst { TextArea } = Input\r\n\r\n/*\r\nProduct的添加和更新的子路由组件\r\n */\r\nclass ProductAddUpdate extends PureComponent {\r\n\r\n  state = {\r\n    options: [],\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 创建用来保存ref标识的标签对象的容器\r\n    this.pw = React.createRef()\r\n    this.editor = React.createRef()\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map(c => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }))\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId} = product\r\n    if(isUpdate && pCategoryId!=='0') {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId)\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find(option => option.value===pCategoryId)\r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions\r\n    }\r\n\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options\r\n    })\r\n  }\r\n\r\n  /*\r\n  异步获取一级/二级分类列表, 并显示\r\n  async函数的返回值是一个新的promise对象, promise的结果和值由async的结果来决定\r\n   */\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId)   // {status: 0, data: categorys}\r\n    if (result.status===0) {\r\n      const categorys = result.data\r\n      // 如果是一级分类列表\r\n      if (parentId==='0') {\r\n        this.initOptions(categorys)\r\n      } else { // 二级列表\r\n        return categorys  // 返回二级列表 ==> 当前async函数返回的promsie就会成功且value为categorys\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n  验证价格的自定义验证函数\r\n   */\r\n  validatePrice = (rule, value, callback) => {\r\n    console.log(value, typeof value)\r\n    if (value*1 > 0) {\r\n      callback() // 验证通过\r\n    } else {\r\n      callback('价格必须大于0') // 验证没通过\r\n    }\r\n  }\r\n\r\n  /*\r\n  用加载下一级列表的回调函数\r\n   */\r\n  loadData = async selectedOptions => {\r\n    // 得到选择的option对象\r\n    const targetOption = selectedOptions[0]\r\n    // 显示loading\r\n    targetOption.loading = true\r\n\r\n    // 根据选中的分类, 请求获取二级分类列表\r\n    const subCategorys = await this.getCategorys(targetOption.value)\r\n    // 隐藏loading\r\n    targetOption.loading = false\r\n    // 二级分类数组有数据\r\n    if (subCategorys && subCategorys.length>0) {\r\n      // 生成一个二级列表的options\r\n      const childOptions = subCategorys.map(c => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true\r\n      }))\r\n      // 关联到当前option上\r\n      targetOption.children = childOptions\r\n    } else { // 当前选中的分类没有二级分类\r\n      targetOption.isLeaf = true\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    })\r\n  }\r\n\r\n  submit = () => {\r\n    // 进行表单验证, 如果通过了, 才发送请求\r\n    this.props.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 1. 收集数据, 并封装成product对象\r\n        const {name, desc, price, categoryIds} = values\r\n        let pCategoryId, categoryId\r\n        if (categoryIds.length===1) {\r\n          pCategoryId = '0'\r\n          categoryId = categoryIds[0]\r\n        } else {\r\n          pCategoryId = categoryIds[0]\r\n          categoryId = categoryIds[1]\r\n        }\r\n        const imgs = this.pw.current.getImgs()\r\n        const detail = this.editor.current.getDetail()\r\n\r\n        const product = {name, desc, price, imgs, detail, pCategoryId, categoryId}\r\n\r\n        // 如果是更新, 需要添加_id\r\n        if(this.isUpdate) {\r\n          product._id = this.product._id\r\n        }\r\n\r\n        // 2. 调用接口请求函数去添加/更新\r\n        const result = await reqAddOrUpdateProduct(product)\r\n\r\n        // 3. 根据结果提示\r\n        if (result.status===0) {\r\n          message.success(`${this.isUpdate ? '更新' : '添加'}商品成功!`)\r\n          this.props.history.goBack()\r\n        } else {\r\n          message.error(`${this.isUpdate ? '更新' : '添加'}商品失败!`)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getCategorys('0')\r\n  }\r\n\r\n  componentWillMount () {\r\n    // 取出携带的state\r\n    const product = this.props.location.state  // 如果是添加没值, 否则有值\r\n    // 保存是否是更新的标识\r\n    this.isUpdate = !!product\r\n    // 保存商品(如果没有, 保存是{})\r\n    this.product = product || {}\r\n  }\r\n\r\n  render() {\r\n\r\n    const {isUpdate, product} = this\r\n    const {pCategoryId, categoryId, imgs, detail} = product\r\n    // 用来接收级联分类ID的数组\r\n    const categoryIds = []\r\n    if(isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if(pCategoryId==='0') {\r\n        categoryIds.push(categoryId)\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId)\r\n        categoryIds.push(categoryId)\r\n      }\r\n    }\r\n\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 },  // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    // 头部左侧标题\r\n    const title = (\r\n      <span>\r\n        <LinkButton onClick={() => this.props.history.goBack()}>\r\n          <Icon type='arrow-left' style={{fontSize: 20}}/>\r\n        </LinkButton>\r\n        <span>{isUpdate ? '修改商品' : '添加商品'}</span>\r\n      </span>\r\n    )\r\n\r\n    const {getFieldDecorator} = this.props.form\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"商品名称\">\r\n            {\r\n              getFieldDecorator('name', {\r\n                initialValue: product.name,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品名称'}\r\n                ]\r\n              })(<Input placeholder='请输入商品名称'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品描述\">\r\n            {\r\n              getFieldDecorator('desc', {\r\n                initialValue: product.desc,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品描述'}\r\n                ]\r\n              })(<TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />)\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品价格\">\r\n\r\n            {\r\n              getFieldDecorator('price', {\r\n                initialValue: product.price,\r\n                rules: [\r\n                  {required: true, message: '必须输入商品价格'},\r\n                  {validator: this.validatePrice}\r\n                ]\r\n              })(<Input type='number' placeholder='请输入商品价格' addonAfter='元'/>)\r\n            }\r\n          </Item>\r\n          <Item label=\"商品分类\">\r\n            {\r\n              getFieldDecorator('categoryIds', {\r\n                initialValue: categoryIds,\r\n                rules: [\r\n                  {required: true, message: '必须指定商品分类'},\r\n                ]\r\n              })(\r\n                <Cascader\r\n                  placeholder='请指定商品分类'\r\n                  options={this.state.options}  /*需要显示的列表数据数组*/\r\n                  loadData={this.loadData} /*当选择某个列表项, 加载下一级列表的监听回调*/\r\n                />\r\n              )\r\n            }\r\n\r\n          </Item>\r\n          <Item label=\"商品图片\">\r\n            <PicturesWall ref={this.pw} imgs={imgs}/>\r\n          </Item>\r\n          <Item label=\"商品详情\" labelCol={{span: 2}} wrapperCol={{span: 20}}>\r\n            <RichTextEditor ref={this.editor} detail={detail}/>\r\n          </Item>\r\n          <Item>\r\n            <Button type='primary' onClick={this.submit}>提交</Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate)\r\n\r\n\r\n/*\r\n1. 子组件调用父组件的方法: 将父组件的方法以函数属性的形式传递给子组件, 子组件就可以调用\r\n2. 父组件调用子组件的方法: 在父组件中通过ref得到子组件标签对象(也就是组件对象), 调用其方法\r\n */\r\n\r\n/*\r\n使用ref\r\n1. 创建ref容器: thi.pw = React.createRef()\r\n2. 将ref容器交给需要获取的标签元素: <PictureWall ref={this.pw} />\r\n3. 通过ref容器读取标签元素: this.pw.current\r\n */","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Icon,\r\n  List\r\n} from 'antd'\r\n\r\nimport LinkButton from '../../components/link-button'\r\nimport {BASE_IMG_URL} from '../../utils/constants'\r\nimport {reqCategory} from '../../api'\r\n\r\nconst Item = List.Item\r\n\r\n\r\n/*\r\nProduct的详情子路由组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n\r\n  state = {\r\n    cName1: '', // 一级分类名称\r\n    cName2: '', // 二级分类名称\r\n  }\r\n\r\n  async componentDidMount () {\r\n\r\n    // 得到当前商品的分类ID\r\n    const {pCategoryId, categoryId} = this.props.location.state.product\r\n    if(pCategoryId==='0') { // 一级分类下的商品\r\n      const result = await reqCategory(categoryId)\r\n      const cName1 = result.data.name\r\n      this.setState({cName1})\r\n    } else { // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)])\r\n      const cName1 = results[0].data.name\r\n      const cName2 = results[1].data.name\r\n      this.setState({\r\n        cName1,\r\n        cName2\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    // 读取携带过来的state数据\r\n    const {name, desc, price, detail, imgs} = this.props.location.state.product\r\n    const {cName1, cName2} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon\r\n            type='arrow-left'\r\n            style={{marginRight: 10, fontSize: 20}}\r\n            onClick={() => this.props.history.goBack()}\r\n          />\r\n        </LinkButton>\r\n\r\n        <span>商品详情</span>\r\n      </span>\r\n    )\r\n    return (\r\n      <Card title={title} className='product-detail'>\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">商品名称:</span>\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品描述:</span>\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品价格:</span>\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">所属分类:</span>\r\n            <span>{cName1} {cName2 ? ' --> '+cName2 : ''}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品图片:</span>\r\n            <span>\r\n              {\r\n                imgs.map(img => (\r\n                  <img\r\n                    key={img}\r\n                    src={BASE_IMG_URL + img}\r\n                    className=\"product-img\"\r\n                    alt=\"img\"\r\n                  />\r\n                ))\r\n              }\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">商品详情:</span>\r\n            <span dangerouslySetInnerHTML={{__html: detail}}>\r\n            </span>\r\n          </Item>\r\n\r\n        </List>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\n\r\nimport ProductHome from './home'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\n\r\nimport './product.less'\r\n\r\n/*\r\n商品路由\r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path='/product' component={ProductHome} exact/> {/*路径完全匹配*/}\r\n        <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n        <Route path='/product/detail' component={ProductDetail}/>\r\n        <Redirect to='/product'/>\r\n      </Switch>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          {\r\n            getFieldDecorator('roleName', {\r\n              initialValue: '',\r\n              rules: [\r\n                {required: true, message: '角色名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入角色名称'/>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm)","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Input,\r\n  Tree\r\n} from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst Item = Form.Item\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    role: PropTypes.object\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const {menus} = this.props.role\r\n    this.state = {\r\n      checkedKeys: menus\r\n    }\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys\r\n\r\n\r\n  getTreeNodes = (menuList) => {\r\n    return menuList.reduce((pre, item) => {\r\n      pre.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      )\r\n      return pre\r\n    }, [])\r\n  }\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = checkedKeys => {\r\n    console.log('onCheck', checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n\r\n  componentWillMount () {\r\n    this.treeNodes = this.getTreeNodes(menuList)\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps (nextProps) {\r\n    console.log('componentWillReceiveProps()', nextProps)\r\n    const menus = nextProps.role.menus\r\n    this.setState({\r\n      checkedKeys: menus\r\n    })\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    console.log('AuthForm render()')\r\n    const {role} = this.props\r\n    const {checkedKeys} = this.state\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Item label='角色名称' {...formItemLayout}>\r\n          <Input value={role.name} disabled/>\r\n        </Item>\r\n\r\n        <Tree\r\n          checkable\r\n          defaultExpandAll={true}\r\n          checkedKeys={checkedKeys}\r\n          onCheck={this.onCheck}\r\n        >\r\n          <TreeNode title=\"平台权限\" key=\"all\">\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {PAGE_SIZE} from \"../../utils/constants\"\r\nimport {reqRoles, reqAddRole, reqUpdateRole} from '../../api'\r\nimport AddForm from './add-form'\r\nimport AuthForm from './auth-form'\r\nimport memoryUtils from \"../../utils/memoryUtils\"\r\nimport {formateDate} from '../../utils/dateUtils'\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\n/*\r\n角色路由\r\n */\r\nexport default class Role extends Component {\r\n\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n\r\n    this.auth = React.createRef()\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: '角色名称',\r\n        dataIndex: 'name'\r\n      },\r\n      {\r\n        title: '创建时间',\r\n        dataIndex: 'create_time',\r\n        render: (create_time) => formateDate(create_time)\r\n      },\r\n      {\r\n        title: '授权时间',\r\n        dataIndex: 'auth_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '授权人',\r\n        dataIndex: 'auth_name'\r\n      },\r\n    ]\r\n  }\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles()\r\n    if (result.status===0) {\r\n      const roles = result.data\r\n      this.setState({\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: event => { // 点击行\r\n        console.log('row onClick()', role)\r\n        // alert('点击行')\r\n        this.setState({\r\n          role\r\n        })\r\n      },\r\n    }\r\n  }\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false\r\n        })\r\n\r\n        // 收集输入数据\r\n        const {roleName} = values\r\n        this.form.resetFields()\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName)\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status===0) {\r\n          message.success('添加角色成功')\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState(state => ({\r\n            roles: [...state.roles, role]\r\n          }))\r\n\r\n        } else {\r\n          message.success('添加角色失败')\r\n        }\r\n\r\n      }\r\n    })\r\n\r\n\r\n  }\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false\r\n    })\r\n\r\n    const role = this.state.role\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus()\r\n    role.menus = menus\r\n    role.auth_time = Date.now()\r\n    role.auth_name = memoryUtils.user.username\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role)\r\n    if (result.status===0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === memoryUtils.user.role_id) {\r\n        memoryUtils.user = {}\r\n        storageUtils.removeUser()\r\n        this.props.history.replace('/login')\r\n        message.success('当前用户角色权限成功')\r\n      } else {\r\n        message.success('设置角色权限成功')\r\n        this.setState({\r\n          roles: [...this.state.roles]\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumn()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getRoles()\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, role, isShowAdd, isShowAuth} = this.state\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type='primary' onClick={() => this.setState({isShowAdd: true})}>创建角色</Button> &nbsp;&nbsp;\r\n        <Button type='primary' disabled={!role._id} onClick={() => this.setState({isShowAuth: true})}>设置角色权限</Button>\r\n      </span>\r\n    )\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: PAGE_SIZE}}\r\n          rowSelection={{\r\n            type: 'radio',\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => { // 选择某个radio时回调\r\n              this.setState({\r\n                role\r\n              })\r\n            }\r\n\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAdd: false})\r\n            this.form.resetFields()\r\n          }}\r\n        >\r\n          <AddForm\r\n            setForm={(form) => this.form = form}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({isShowAuth: false})\r\n          }}\r\n        >\r\n          <AuthForm ref={this.auth} role={role}/>\r\n        </Modal>\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {PureComponent} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n  Form,\r\n  Select,\r\n  Input\r\n} from 'antd'\r\n\r\nconst Item = Form.Item\r\nconst Option = Select.Option\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setForm(this.props.form)\r\n  }\r\n\r\n  render() {\r\n\r\n    const {roles, user} = this.props\r\n    const { getFieldDecorator } = this.props.form\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 },  // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    }\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label='用户名'>\r\n          {\r\n            getFieldDecorator('username', {\r\n              initialValue: user.username,\r\n            })(\r\n              <Input placeholder='请输入用户名'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        {\r\n          user._id ? null : (\r\n            <Item label='密码'>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  initialValue: user.password,\r\n                })(\r\n                  <Input type='password' placeholder='请输入密码'/>\r\n                )\r\n              }\r\n            </Item>\r\n          )\r\n        }\r\n\r\n        <Item label='手机号'>\r\n          {\r\n            getFieldDecorator('phone', {\r\n              initialValue: user.phone,\r\n            })(\r\n              <Input placeholder='请输入手机号'/>\r\n            )\r\n          }\r\n        </Item>\r\n        <Item label='邮箱'>\r\n          {\r\n            getFieldDecorator('email', {\r\n              initialValue: user.email,\r\n            })(\r\n              <Input placeholder='请输入邮箱'/>\r\n            )\r\n          }\r\n        </Item>\r\n\r\n        <Item label='角色'>\r\n          {\r\n            getFieldDecorator('role_id', {\r\n              initialValue: user.role_id,\r\n            })(\r\n              <Select>\r\n                {\r\n                  roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)\r\n                }\r\n              </Select>\r\n            )\r\n          }\r\n        </Item>\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm)","import React, {Component} from 'react'\r\nimport {\r\n  Card,\r\n  Button,\r\n  Table,\r\n  Modal,\r\n  message\r\n} from 'antd'\r\nimport {formateDate} from \"../../utils/dateUtils\"\r\nimport LinkButton from \"../../components/link-button/index\"\r\nimport {reqDeleteUser, reqUsers, reqAddOrUpdateUser} from \"../../api/index\";\r\nimport UserForm from './user-form'\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  }\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: '用户名',\r\n        dataIndex: 'username'\r\n      },\r\n      {\r\n        title: '邮箱',\r\n        dataIndex: 'email'\r\n      },\r\n\r\n      {\r\n        title: '电话',\r\n        dataIndex: 'phone'\r\n      },\r\n      {\r\n        title: '注册时间',\r\n        dataIndex: 'create_time',\r\n        render: formateDate\r\n      },\r\n      {\r\n        title: '所属角色',\r\n        dataIndex: 'role_id',\r\n        render: (role_id) => this.roleNames[role_id]\r\n      },\r\n      {\r\n        title: '操作',\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>修改</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>删除</LinkButton>\r\n          </span>\r\n        )\r\n      },\r\n    ]\r\n  }\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name\r\n      return pre\r\n    }, {})\r\n    // 保存\r\n    this.roleNames = roleNames\r\n  }\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null // 去除前面保存的user\r\n    this.setState({isShow: true})\r\n  }\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user // 保存user\r\n    this.setState({\r\n      isShow: true\r\n    })\r\n  }\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id)\r\n        if(result.status===0) {\r\n          message.success('删除用户成功!')\r\n          this.getUsers()\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n\r\n    this.setState({isShow: false})\r\n\r\n    // 1. 收集输入数据\r\n    const user = this.form.getFieldsValue()\r\n    this.form.resetFields()\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user)\r\n    // 3. 更新列表显示\r\n    if(result.status===0) {\r\n      message.success(`${this.user ? '修改' : '添加'}用户成功`)\r\n      this.getUsers()\r\n    }\r\n  }\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers()\r\n    if (result.status===0) {\r\n      const {users, roles} = result.data\r\n      this.initRoleNames(roles)\r\n      this.setState({\r\n        users,\r\n        roles\r\n      })\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.initColumns()\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.getUsers()\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    const {users, roles, isShow} = this.state\r\n    const user = this.user || {}\r\n\r\n    const title = <Button type='primary' onClick={this.showAdd}>创建用户</Button>\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey='_id'\r\n          dataSource={users}\r\n          columns={this.columns}\r\n          pagination={{defaultPageSize: 2}}\r\n        />\r\n\r\n        <Modal\r\n          title={user._id ? '修改用户' : '添加用户'}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields()\r\n            this.setState({isShow: false})\r\n          }}\r\n        >\r\n          <UserForm\r\n            setForm={form => this.form = form}\r\n            roles={roles}\r\n            user={user}\r\n          />\r\n        </Modal>\r\n\r\n      </Card>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'bar',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'bar',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='柱状图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport './not-found.less'\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n\r\n      <Row className='not-found'>\r\n        <Col span={12} className='left'></Col>\r\n        <Col span={12} className='right'>\r\n          <h1>404</h1>\r\n          <h2>抱歉，你访问的页面不存在</h2>\r\n          <div>\r\n            <Button type='primary' onClick={() => this.props.history.replace('/home')}>\r\n              回到首页\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}","import React from 'react'\r\nimport './order.less'\r\n\r\n/*\r\nHome路由组件\r\n */\r\nexport default function Order(props) {\r\n  return (\r\n    <div className=\"order\">\r\n      订单管理模块学生实战开发中...\r\n    </div>\r\n  )\r\n}","import React, {Component} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom'\r\nimport { Layout } from 'antd'\r\n\r\nimport memoryUtils from '../../utils/memoryUtils'\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../home/home'\r\nimport Category from '../category/category'\r\nimport Product from '../product/product'\r\nimport Role from '../role/role'\r\nimport User from '../user/user'\r\nimport Bar from '../charts/bar'\r\nimport Line from '../charts/line'\r\nimport Pie from '../charts/pie'\r\nimport NotFound from '../not-found/not-found'\r\nimport Order from '../order/order'\r\n\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\n/*\r\n后台管理的路由组件\r\n */\r\nexport default class Admin extends Component {\r\n  render () {\r\n    const user = memoryUtils.user\r\n    // 如果内存没有存储user ==> 当前没有登陆\r\n    if(!user || !user._id) {\r\n      // 自动跳转到登陆(在render()中)\r\n      return <Redirect to='/login'/>\r\n    }\r\n    return (\r\n      <Layout style={{minHeight: '100%'}}>\r\n        <Sider>\r\n          <LeftNav/>\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{margin: 20, backgroundColor: '#fff'}}>\r\n            <Switch>\r\n              <Redirect from='/' exact to='/home'/>\r\n              <Route path='/home' component={Home}/>\r\n              <Route path='/category' component={Category}/>\r\n              <Route path='/product' component={Product}/>\r\n              <Route path='/user' component={User}/>\r\n              <Route path='/role' component={Role}/>\r\n              <Route path=\"/charts/bar\" component={Bar}/>\r\n              <Route path=\"/charts/pie\" component={Pie}/>\r\n              <Route path=\"/charts/line\" component={Line}/>\r\n              <Route path=\"/order\" component={Order}/>\r\n              <Route component={NotFound}/>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{textAlign: 'center', color: '#cccccc'}}>推荐使用谷歌浏览器，可以获得更佳页面操作体验</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\n\r\nimport Login from './pages/login/login'\r\nimport Admin from './pages/admin/admin'\r\n\r\n/*\r\n应用的根组件\r\n */\r\nexport default class App extends Component {\r\n\r\n\r\n  render () {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch> {/*只匹配其中一个*/}\r\n          <Route path='/login' component={Login}></Route>\r\n          <Route path='/' component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}","/*\r\n入口js\r\n */\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n// import 'antd/dist/antd.css'\r\n\r\nimport App from './App'\r\nimport storageUtils from './utils/storageUtils'\r\nimport memoryUtils from './utils/memoryUtils'\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser()\r\nmemoryUtils.user = user\r\n\r\n\r\n// 将App组件标签渲染到index页面的div上\r\nReactDOM.render(<App />, document.getElementById('root'))","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}